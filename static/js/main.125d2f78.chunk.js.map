{"version":3,"sources":["index.js"],"names":["appointmentList","Appointment","props","handleChange","bind","cancelAction","event","inputName","target","name","inputValue","value","id","parseInt","this","cancelAppointment","type","defaultValue","title","onChange","date","time","location","description","onClick","React","Component","AppointmentList","appointments","items","map","item","key","AppointmentForm","onSubmit","preventDefault","newTitle","refs","titleValue","newDate","dateValue","newTime","timeValue","newLocation","locationValue","newDescription","descriptionValue","addItem","form","reset","ref","placeholder","Scheduler","addAppointment","state","appointment","unshift","length","setState","itemId","splice","initList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.125d2f78.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n// Create a website that allows you to:\n//  schedule personal appointments with a date, time, location, and description\n//  see a list of appointments\n//  edit appointments\n//  cancel appointments\n\n// Additional guidelines for the challenge:\n//  React for the view layer\n//  You can stop after 3 hours, even if it is incomplete\n//  You do not need backend services for persistence, volatile storage is ok for this\n// challenge\n\n// Please share your code via a Github repository and include instructions for running the\n// application in the README.md file.\n\nlet appointmentList = [];\n\nclass Appointment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.cancelAction = this.cancelAction.bind(this);\n  }\n  handleChange(event) {\n    const inputName = event.target.name\n    const inputValue = event.target.value\n\n    let id = parseInt(this.props.id);\n    appointmentList[id][inputName] = inputValue;\n  }\n  cancelAction() {\n    let id = parseInt(this.props.id);\n    this.props.cancelAppointment(id);\n  }\n  render() {\n    return (\n        <div>\n        Title\n        <input type=\"text\"\n    name=\"title\"\n    defaultValue={this.props.title}\n    onChange={this.handleChange}\n    /> <br />\n    Date\n    <input type=\"text\"\n    name=\"date\"\n    defaultValue={this.props.date}\n    onChange={this.handleChange}\n    /> <br />\n    Time\n    <input type=\"text\"\n    name=\"time\"\n    defaultValue={this.props.time}\n    onChange={this.handleChange}\n    /> <br />\n    Location\n    <input type=\"text\"\n    name=\"location\"\n    defaultValue={this.props.location}\n    onChange={this.handleChange}\n    /> <br />\n    Description\n    <input type=\"text\"\n    name=\"description\"\n    defaultValue={this.props.description}\n    onChange={this.handleChange}\n    /> <br />\n    <button type=\"button\" onClick={this.cancelAction}>cancel appointment</button>\n    <br /><br />\n    </div>\n  );\n  }\n}\n\nclass AppointmentList extends React.Component {\n  render() {\n    let appointments = this.props.items.map((item, id) => {\n      return (\n          <Appointment key={id}\n      title={item.title}\n      date={item.date}\n      time={item.time}\n      location={item.location}\n      description={item.description}\n      id={id}\n      cancelAppointment={this.props.cancelAppointment}\n      />\n    );\n    });\n    return (\n        <div> {appointments} </div>\n  );\n  }\n}\n\nclass AppointmentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  onSubmit(event) {\n    event.preventDefault();\n    let newTitle = this.refs.titleValue.value;\n    let newDate = this.refs.dateValue.value;\n    let newTime = this.refs.timeValue.value;\n    let newLocation = this.refs.locationValue.value;\n    let newDescription = this.refs.descriptionValue.value;\n\n    if (newTitle) {\n      this.props.addItem({newTitle, newDate, newTime, newLocation, newDescription});\n      this.refs.form.reset();\n    }\n  }\n  render() {\n    return (\n        <form ref=\"form\" onSubmit={this.onSubmit}>\n        <input type=\"text\" ref=\"titleValue\" placeholder=\"Title\"/><br/>\n        <input type=\"text\" ref=\"dateValue\" placeholder=\"Date\"/><br/>\n        <input type=\"text\" ref=\"timeValue\" placeholder=\"Time\"/><br/>\n        <input type=\"text\" ref=\"locationValue\" placeholder=\"Location\"/><br/>\n        <input type=\"text\" ref=\"descriptionValue\" placeholder=\"Description\"/><br/>\n        <button type=\"submit\">add appointment</button>\n    </form>\n  );\n  }\n}\n\nclass Scheduler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.cancelAppointment = this.cancelAppointment.bind(this);\n    this.state = {\n      appointmentList: appointmentList\n    };\n  }\n  addAppointment(appointment) {\n    appointmentList.unshift({\n      id: appointmentList.length++,\n      title: appointment.newTitle,\n      date: appointment.newDate,\n      time: appointment.newTime,\n      location: appointment.newLocation,\n      description: appointment.newDescription,\n    });\n    this.setState({appointmentList: appointmentList});\n  }\n  cancelAppointment(itemId) {\n    appointmentList.splice(itemId, 1);\n    this.setState({appointmentList: appointmentList});\n  }\n  render() {\n    return (\n        <div id=\"main\">\n        <h1>Appointment Scheduler</h1>\n\n    <h2>Enter New Appointment</h2>\n    <AppointmentForm addItem={this.addAppointment}/>\n\n    <h2>View Appointments</h2>\n    <AppointmentList items={this.props.initList}\n    cancelAppointment={this.cancelAppointment}\n    />\n    </div>\n  );\n  }\n}\n\nReactDOM.render(\n<Scheduler initList={appointmentList}/>,\ndocument.getElementById('root')\n);\n"],"sourceRoot":""}